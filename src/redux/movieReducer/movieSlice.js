import { createSlice } from "@reduxjs/toolkit";
import { getListGheThunk } from "./movieThunk";

const initialState = {
  listGhe: [],
  listGheDangDat: [],
};

const movieSlice = createSlice({
  name: "movieSlice",
  initialState,
  reducers: {
    addGheAction: (state, action) => {
      let ghe = action.payload;
      // Check xem gháº¿ Ä‘áº©y lÃªn redux Ä‘Ã£ tá»“n táº¡i chÆ°a, sau Ä‘Ã³ xá»­ lÃ½. Náº¿u chÆ°a tá»“n táº¡i thÃ¬ Ä‘áº©y lÃªn, cÃ²n náº¿u Ä‘Ã£ tá»“n táº¡i rá»“i thÃ¬ sáº½ xÃ³a Ä‘i
      let index = state.listGheDangDat.findIndex(
        (gheDangDat) => gheDangDat.maGhe === ghe.maGhe
      );
      if (index != -1) {
        // Náº¿u gháº¿ Ä‘Ã³ Ä‘Ã£ tá»“n táº¡i trong list gháº¿ Ä‘ang Ä‘áº·t thÃ¬ xÃ³a nÃ³ Ä‘i
        state.listGheDangDat.splice(index, 1);
      } else {
        // Náº¿u gháº¿ Ä‘Ã³ chÆ°a tá»“n táº¡i trong list gháº¿ Ä‘ang Ä‘áº·t thÃ¬ thÃªm nÃ³ vÃ o
        state.listGheDangDat.push(ghe);
      }
    },
  },
  extraReducers: (builder) => {
    builder.addCase(getListGheThunk.fulfilled, (state, action) => {
      let infoScreenPage = action.payload;
      console.log("ðŸ˜¢ ~ infoScreenPage", infoScreenPage);
      let listGhe = infoScreenPage.danhSachGhe.slice(0, 100);
      state.listGhe = listGhe;
    });
  },
});

export const { addGheAction } = movieSlice.actions;

export default movieSlice.reducer;
